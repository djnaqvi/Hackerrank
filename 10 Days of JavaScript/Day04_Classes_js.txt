{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue254;\red0\green0\blue0;
\red0\green0\blue255;\red14\green110\blue109;\red19\green120\blue72;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c100000;\cssrgb\c0\c50196\c50196;\cssrgb\c3529\c53333\c35294;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 /*\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * Implement a Polygon class with the following properties:\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 1. A constructor that takes an array of integer side lengths.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * 2. A 'perimeter' method that returns the sum of the Polygon's side lengths.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl460\partightenfactor0
\cf5 \cb3 \strokec5 class\cf4 \strokec4  \cf6 \strokec6 Polygon\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 constructor\cf4 \strokec4 (sides) \{\cb1 \
\cb3         \cf5 \strokec5 this\cf4 \strokec4 .sides = sides;\cb1 \
\cb3     \}\cb1 \
\cb3     perimeter(sides) \{\cb1 \
\cb3         \cf5 \strokec5 var\cf4 \strokec4  perimeter = \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 for\cf4 \strokec4  (\cf5 \strokec5 var\cf4 \strokec4  i = \cf7 \strokec7 0\cf4 \strokec4 ; i < \cf5 \strokec5 this\cf4 \strokec4 .sides.length; i++) \{\cb1 \
\cb3             perimeter += \cf5 \strokec5 this\cf4 \strokec4 .sides[i];\cb1 \
\cb3         \}\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4  perimeter;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\
\pard\pardeftab720\sl460\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  rectangle = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Polygon\cf4 \strokec4 ([\cf7 \strokec7 10\cf4 \strokec4 , \cf7 \strokec7 20\cf4 \strokec4 , \cf7 \strokec7 10\cf4 \strokec4 , \cf7 \strokec7 20\cf4 \strokec4 ]);\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  square = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Polygon\cf4 \strokec4 ([\cf7 \strokec7 10\cf4 \strokec4 , \cf7 \strokec7 10\cf4 \strokec4 , \cf7 \strokec7 10\cf4 \strokec4 , \cf7 \strokec7 10\cf4 \strokec4 ]);\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  pentagon = \cf5 \strokec5 new\cf4 \strokec4  \cf6 \strokec6 Polygon\cf4 \strokec4 ([\cf7 \strokec7 10\cf4 \strokec4 , \cf7 \strokec7 20\cf4 \strokec4 , \cf7 \strokec7 30\cf4 \strokec4 , \cf7 \strokec7 40\cf4 \strokec4 , \cf7 \strokec7 43\cf4 \strokec4 ]);\cb1 \
\
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3 console.log(rectangle.perimeter());\cb1 \
\cb3 console.log(square.perimeter());\cb1 \
\cb3 console.log(pentagon.perimeter());\cb1 \
}