{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green255\blue254;\red0\green0\blue0;
\red14\green110\blue109;\red15\green112\blue1;\red144\green1\blue18;\red19\green120\blue72;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c0\c50196\c50196;\cssrgb\c0\c50196\c0;\cssrgb\c63922\c8235\c8235;\cssrgb\c3529\c53333\c35294;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 Rectangle\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 constructor\cf4 \strokec4 (w, h) \{\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .w = w;\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .h = h;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl460\partightenfactor0
\cf6 \cb3 \strokec6 /*\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  *  Write code that adds an 'area' method to the Rectangle class' prototype\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl460\partightenfactor0
\cf5 \cb3 \strokec5 Rectangle\cf4 \strokec4 .prototype.area = \cf2 \strokec2 function\cf4 \strokec4  () \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 return\cf4 \strokec4  (\cf2 \strokec2 this\cf4 \strokec4 .h * \cf2 \strokec2 this\cf4 \strokec4 .w);\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf6 \cb3 \strokec6 /*\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  * Create a Square class that inherits from Rectangle and implement its class constructor\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl460\partightenfactor0
\cf2 \cb3 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 Square\cf4 \strokec4  \cf2 \strokec2 extends\cf4 \strokec4  \cf5 \strokec5 Rectangle\cf4 \strokec4  \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 constructor\cf4 \strokec4 (s)\{\cb1 \
\cb3         \cf2 \strokec2 super\cf4 \strokec4 (s)\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .h = s;\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .w = s;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl460\partightenfactor0
\cf2 \cb3 \strokec2 if\cf4 \strokec4  (\cf5 \strokec5 JSON\cf4 \strokec4 .stringify(\cf5 \strokec5 Object\cf4 \strokec4 .getOwnPropertyNames(\cf5 \strokec5 Square\cf4 \strokec4 .prototype)) === \cf5 \strokec5 JSON\cf4 \strokec4 .stringify([ \cf7 \strokec7 'constructor'\cf4 \strokec4  ])) \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 const\cf4 \strokec4  rec = \cf2 \strokec2 new\cf4 \strokec4  \cf5 \strokec5 Rectangle\cf4 \strokec4 (\cf8 \strokec8 3\cf4 \strokec4 , \cf8 \strokec8 4\cf4 \strokec4 );\cb1 \
\cb3     \cf2 \strokec2 const\cf4 \strokec4  sqr = \cf2 \strokec2 new\cf4 \strokec4  \cf5 \strokec5 Square\cf4 \strokec4 (\cf8 \strokec8 3\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     console.log(rec.area());\cb1 \
\cb3     console.log(sqr.area());\cb1 \
\cb3 \} \cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3     console.log(-\cf8 \strokec8 1\cf4 \strokec4 );\cb1 \
\cb3     console.log(-\cf8 \strokec8 1\cf4 \strokec4 );\cb1 \
\cb3 \}}