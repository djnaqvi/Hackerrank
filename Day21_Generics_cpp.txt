{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green255\blue254;\red0\green0\blue0;
\red144\green1\blue18;\red15\green112\blue1;\red19\green120\blue72;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c50196\c0;\cssrgb\c3529\c53333\c35294;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include\cf4 \strokec4  \cf2 \strokec2 <\cf5 \strokec5 iostream\cf2 \strokec2 >\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include\cf4 \strokec4  \cf2 \strokec2 <\cf5 \strokec5 vector\cf2 \strokec2 >\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include\cf4 \strokec4  \cf2 \strokec2 <\cf5 \strokec5 string\cf2 \strokec2 >\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 using\cf4 \strokec4  \cf2 \strokec2 namespace\cf4 \strokec4  std;\cb1 \
\
\pard\pardeftab720\sl460\partightenfactor0
\cf6 \cb3 \strokec6 /**\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 *    Name: printArray\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 *    Print each element of the generic vector on a new line. Do not return anything.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 *    @param A generic vector\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 **/\cf4 \cb1 \strokec4 \
\
\cf6 \cb3 \strokec6 // Write your code here\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl460\partightenfactor0
\cf2 \cb3 \strokec2 template\cf4 \strokec4  <\cf2 \strokec2 typename\cf4 \strokec4  t> \cf2 \strokec2 void\cf4 \strokec4  printArray(vector<t> v_) \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3   \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 auto\cf4 \strokec4  &element : v_) \{\cb1 \
\cb3     cout << element << endl;\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl460\partightenfactor0
\cf2 \cb3 \strokec2 int\cf4 \strokec4  main() \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 int\cf4 \strokec4  n;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\cb1 \
\cb3 \'a0\'a0\'a0\'a0cin >> n;\cb1 \
\cb3 \'a0\'a0\'a0\'a0vector<\cf2 \strokec2 int\cf4 \strokec4 > int_vector(n);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 int\cf4 \strokec4  i = \cf7 \strokec7 0\cf4 \strokec4 ; i < n; i++) \{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 int\cf4 \strokec4  value;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0cin >> value;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0int_vector[i] = value;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\cb3 \'a0\'a0\'a0\'a0\cb1 \
\cb3 \'a0\'a0\'a0\'a0cin >> n;\cb1 \
\cb3 \'a0\'a0\'a0\'a0vector<string> string_vector(n);\cb1 \
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 int\cf4 \strokec4  i = \cf7 \strokec7 0\cf4 \strokec4 ; i < n; i++) \{\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0string value;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0cin >> value;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0string_vector[i] = value;\cb1 \
\cb3 \'a0\'a0\'a0\'a0\}\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0printArray<\cf2 \strokec2 int\cf4 \strokec4 >(int_vector);\cb1 \
\cb3 \'a0\'a0\'a0\'a0printArray<string>(string_vector);\cb1 \
\
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 return\cf4 \strokec4  \cf7 \strokec7 0\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
}
