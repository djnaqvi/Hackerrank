{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green255\blue254;\red0\green0\blue0;
\red15\green112\blue1;\red144\green1\blue18;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c0\c50196\c0;\cssrgb\c63922\c8235\c8235;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function\cf4 \strokec4  processData(inputString) \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 // This line of code prints the first line of output\cf4 \cb1 \strokec4 \
\cb3     console.log(\cf6 \strokec6 "Hello, World."\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 // Write the second line of output that prints the contents of 'inputString' here.\cf4 \cb1 \strokec4 \
\cb3     console.log(inputString);\cb1 \
\cb3 \}\cb1 \
\
\
\cb3 process.stdin.resume();\cb1 \
\cb3 process.stdin.setEncoding(\cf6 \strokec6 "ascii"\cf4 \strokec4 );\cb1 \
\cb3 _input = \cf6 \strokec6 ""\cf4 \strokec4 ;\cb1 \
\cb3 process.stdin.on(\cf6 \strokec6 "data"\cf4 \strokec4 , \cf2 \strokec2 function\cf4 \strokec4  (input) \{\cb1 \
\cb3     _input += input;\cb1 \
\cb3 \});\cb1 \
\
\cb3 process.stdin.on(\cf6 \strokec6 "end"\cf4 \strokec4 , \cf2 \strokec2 function\cf4 \strokec4  () \{\cb1 \
\cb3    processData(_input);\cb1 \
\cb3 \});\cb1 \
}