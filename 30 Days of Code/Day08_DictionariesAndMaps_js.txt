{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green255\blue254;\red0\green0\blue0;
\red144\green1\blue18;\red19\green120\blue72;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c100000;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c63922\c8235\c8235;\cssrgb\c3529\c53333\c35294;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl460\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 function\cf4 \strokec4  processData(input) \{\cb1 \
\pard\pardeftab720\sl460\partightenfactor0
\cf4 \cb3     input = input.split(\cf5 \strokec5 '\\n'\cf4 \strokec4 );\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  n = parseInt(input[\cf6 \strokec6 0\cf4 \strokec4 ]);\cb1 \
\cb3     \cf2 \strokec2 var\cf4 \strokec4  phoneBook = [];\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  i = \cf6 \strokec6 0\cf4 \strokec4 ; i < n; i++) \{\cb1 \
\cb3         \cf2 \strokec2 var\cf4 \strokec4  newinput = input[i + \cf6 \strokec6 1\cf4 \strokec4 ];\cb1 \
\cb3         newinput = newinput.split(\cf5 \strokec5 ' '\cf4 \strokec4 );\cb1 \
\cb3         phoneBook[newinput[\cf6 \strokec6 0\cf4 \strokec4 ]] = newinput[\cf6 \strokec6 1\cf4 \strokec4 ];\cb1 \
\cb3     \}\cb1 \
\
\cb3     \cf2 \strokec2 for\cf4 \strokec4  (\cf2 \strokec2 var\cf4 \strokec4  i = n + \cf6 \strokec6 1\cf4 \strokec4 ; i < input.length; i++) \{\cb1 \
\cb3         \cf2 \strokec2 var\cf4 \strokec4  num = (phoneBook[input[i]]);\cb1 \
\cb3         \cf2 \strokec2 if\cf4 \strokec4  (num !== \cf2 \strokec2 undefined\cf4 \strokec4 ) \{\cb1 \
\cb3             console.log(input[i] + \cf5 \strokec5 '='\cf4 \strokec4  + num);\cb1 \
\cb3         \} \cf2 \strokec2 else\cf4 \strokec4  \{\cb1 \
\cb3             console.log(\cf5 \strokec5 'Not found'\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\cb3 process.stdin.resume();\cb1 \
\cb3 process.stdin.setEncoding(\cf5 \strokec5 "ascii"\cf4 \strokec4 );\cb1 \
\cb3 _input = \cf5 \strokec5 ""\cf4 \strokec4 ;\cb1 \
\cb3 process.stdin.on(\cf5 \strokec5 "data"\cf4 \strokec4 , \cf2 \strokec2 function\cf4 \strokec4  (input) \{\cb1 \
\cb3     _input += input;\cb1 \
\cb3 \});\cb1 \
\
\cb3 process.stdin.on(\cf5 \strokec5 "end"\cf4 \strokec4 , \cf2 \strokec2 function\cf4 \strokec4  () \{\cb1 \
\cb3     processData(_input);\cb1 \
\cb3 \});}